{"mappings":"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","sources":["app.js"],"sourcesContent":["// Utility to fetch data from db.json\r\nasync function fetchData(resource) {\r\n  const response = await fetch(`http://localhost:3000/${resource}`);\r\n  return response.json();\r\n}\r\n\r\n// Utility to post data to db.json\r\nasync function postData(resource, data) {\r\n  await fetch(`http://localhost:3000/${resource}`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(data),\r\n  });\r\n}\r\n\r\n// LOGIN\r\n\r\nfunction showError(message) {\r\n  const errorMessage = document.getElementById('error-message');\r\n  errorMessage.textContent = message;\r\n  errorMessage.style.display = 'block';\r\n\r\n  setTimeout(() => {\r\n    errorMessage.style.display = 'none';\r\n  }, 3000);\r\n}\r\n\r\n\r\n// Login Logic\r\nasync function login(event) {\r\n  event.preventDefault();\r\n\r\n  const email = document.getElementById(\"email\").value.trim();\r\n  const password = document.getElementById(\"password\").value.trim();\r\n\r\n  if (!email || !password) {\r\n    showError(\"All fields are required.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Now that we are sure password and email fields are not empty. Fetch all the users from database(LocalStorage or server)\r\n    const users = await fetchData(\"users\");\r\n    const user = users.find(u => u.email === email && u.password === password);\r\n\r\n    // If there exist a user with such credentials\r\n    if (user) {\r\n      localStorage.setItem('loggedInUser', JSON.stringify(user));\r\n      window.location.href = user.role === \"admin\" ? \"admin.html\" : \"index.html\"\r\n    } else {\r\n      showError(\"Inavalid email or password.\")\r\n    }\r\n\r\n  } catch (error) {\r\n    console.log(\"An error occured while login\")\r\n    showError(\"Unexpected error occured. Please try again.\")\r\n  }\r\n}\r\n\r\n// SIGN UP\r\n\r\n// Signup Logic\r\nasync function signup(event) {\r\n  event.preventDefault();\r\n  const fullname = document.getElementById(\"fullname\").value;\r\n  const email = document.getElementById(\"email\").value;\r\n  const password = document.getElementById(\"password\").value;\r\n\r\n  if (!fullname || !email | !password) {\r\n    showError(\"All fields are required.\")\r\n    return;\r\n  }\r\n\r\n  const users = await fetchData(\"users\");\r\n  if (users.find(u => u.email === email)) {\r\n    showError(\"Email already exists\");\r\n    return;\r\n  }\r\n\r\n  const newUser = { fullname, email, password, role: \"user\" };\r\n  await postData(\"users\", newUser);\r\n  // alert(\"Signup successful! Redirecting to login...\");\r\n  window.location.href = \"login.html\";\r\n}\r\n\r\n// Add to Cart\r\nasync function addToCart(productId) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const cart = await fetchData(\"cart\");\r\n\r\n  const existingItem = cart.find(item => item.userId === user.id && item.productId === productId);\r\n  if (existingItem) {\r\n    existingItem.quantity++;\r\n  } else {\r\n    cart.push({ userId: user.id, productId, quantity: 1 });\r\n  }\r\n\r\n  await postData(\"cart\", cart);\r\n  alert(\"Item added to cart\");\r\n}\r\n\r\n// Calculate Cart Total\r\nasync function calculateCartTotal() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const cart = await fetchData(\"cart\");\r\n  const products = await fetchData(\"products\");\r\n\r\n  const userCart = cart.filter(item => item.userId === user.id);\r\n  const total = userCart.reduce((sum, item) => {\r\n    const product = products.find(p => p.id === item.productId);\r\n    return sum + product.price * item.quantity;\r\n  }, 0);\r\n\r\n  document.getElementById(\"cart-total\").innerText = `$${total}`;\r\n}\r\n\r\n\r\nmodule.exports = { login, showError,fetchData }"],"names":[],"version":3,"file":"index.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}